<!DOCTYPE html>
<html>
  <head>
    <title><%= title %></title>
    <link rel='stylesheet' href='/stylesheets/style.css' />
      <script src="/bower_components/d3/d3.js"></script>


      <script type="text/javascript" src="/bower_components/sockjs-client/dist/sockjs.js"></script>
      <script type="text/javascript" src="/bower_components/underscore/underscore-min.js"></script>
      <script type="text/javascript">
          var sock = new SockJS('/motion');


          var n = 40,
                  random = d3.random.normal(0, 0),
                  random2 = d3.random.normal(0, 0),
                  random3 = d3.random.normal(0, 0),
                  data = {
                      x: d3.range(n).map(random),
                      y: d3.range(n).map(random2),
                      z: d3.range(n).map(random3)
                  };

          sock.onmessage = function (e) {
              //console.log(e);

              var dataObj = JSON.parse(e.data);



//              data.x.push(dataObj.acc.x);
//              data.y.push(dataObj.acc.y);
//              data.z.push(dataObj.acc.z);

              Object.keys(data).map(function(d) {
                  data[d].push(dataObj.acc[d]);
                  data[d].shift();
              });
          };
      </script>


      <style>

          svg {
              font: 10px sans-serif;
          }

          .line {
              fill: none;
              stroke: #000;
              stroke-width: 1.5px;
          }

          .linex {
              stroke: red;
          }

          .liney {
              stroke: green;
          }

          .linez {
              stroke: blue;
          }

          .axis path,
          .axis line {
              fill: none;
              stroke: #000;
              shape-rendering: crispEdges;
          }

      </style>
  </head>
  <body>
    <h1><%= title %></h1>
    <p>Welcome to <%= title %></p>

    <script>



        var margin = {top: 20, right: 20, bottom: 20, left: 40},
                width = 960 - margin.left - margin.right,
                height = 500 - margin.top - margin.bottom;

        var x = d3.scale.linear()
                .domain([0, n - 1])
                .range([0, width]);

        var y = d3.scale.linear()
                .domain([-25, 25])
                .range([height, 0]);


        var svg = d3.select("body").append("svg")
                .attr("width", width + margin.left + margin.right)
                .attr("height", height + margin.top + margin.bottom)
                .append("g")
                .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

        svg.append("defs").append("clipPath")
                .attr("id", "clip")
                .append("rect")
                .attr("width", width)
                .attr("height", height);

        svg.append("g")
                .attr("class", "x axis")
                .attr("transform", "translate(0," + y(0) + ")")
                .call(d3.svg.axis().scale(x).orient("bottom"));

        svg.append("g")
                .attr("class", "y axis")
                .call(d3.svg.axis().scale(y).orient("left"));

        var lineGroup = svg.append("g")
                .attr("class", "lines");

        var lines = {},
            paths = {};

        Object.keys(data).forEach(function(d) {
            lines[d] = d3.svg.line()
                    .x(function(d, i) { return x(i); })
                    .y(function(d, i) { return y(d); });

            paths[d] = lineGroup.append("g")
                    .attr("clip-path", "url(#clip)")
                    .append("path")
                    .datum(data[d])
                    .attr("class", "line line" + d)
                    .attr("d", lines[d]);
        });

        tick();

        function tick() {

            // push a new data point onto the back

//            Object.keys(data).map(function(d) {
//                data[d].push(random());
//            });

            lineGroup
                    .attr("transform", null)
                    .transition()
                    .duration(100)
                    .ease("linear")
                    .attr("transform", "translate(" + x(-1) + ",0)")
                    .each("end", tick);
            // redraw the line, and slide it to the left


            Object.keys(data).map(function(d) {
                paths[d].attr("d", lines[d]);
                ///data[d].shift();
            });
        }

    </script>

  </body>
</html>
